// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation

/// A response from `CountMessageTokens`. It returns the model's `token_count` for the `prompt`.
public struct CountMessageTokensResponse: Codable {
  /// The number of tokens that the `model` tokenizes the `prompt` into. Always non-negative.
  public var tokenCount: Int32?

  public init(tokenCount: Int32? = nil) {
    self.tokenCount = tokenCount
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.tokenCount = try values.decodeIfPresent(Int32.self, forKey: "tokenCount")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(tokenCount, forKey: "tokenCount")
  }
}
