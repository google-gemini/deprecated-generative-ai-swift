// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation

/// The response from the model. This includes candidate messages and conversation history in the form of chronologically-ordered messages.
public struct GenerateMessageResponse: Codable {
  /// Candidate response messages from the model.
  public var candidates: [Message]?
  /// The conversation history used by the model.
  public var messages: [Message]?

  public init(candidates: [Message]? = nil, messages: [Message]? = nil) {
    self.candidates = candidates
    self.messages = messages
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.candidates = try values.decodeIfPresent([Message].self, forKey: "candidates")
    self.messages = try values.decodeIfPresent([Message].self, forKey: "messages")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(candidates, forKey: "candidates")
    try values.encodeIfPresent(messages, forKey: "messages")
  }
}
